"use strict";var Convert=Convert||{};Convert.base32toHex=function(t){if("string"!=typeof t)throw new Error("Argument to base32toHex() is not a string");if(0===t.length)throw new Error("Argument to base32toHex() is empty");if(!t.match(/^[A-Z2-7]+=*$/i))throw new Error("Argument to base32toHex() contains invalid characters");var r="",e="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),n=(t.toUpperCase()+"========").match(/.{1,8}/g);n.pop();var o=n[n.length-1].match(/=*$/)[0].length;if(o>6)throw new Error("Invalid base32 data (too much padding)");for(var a=0;a<n.length;a++){for(var u=0,i=n[a].split(""),s=0;s<i.length;s++){u*=e.length;var f=e.indexOf(i[s]);"="===i[s]&&(f=0),u+=f}r+=("0000000000"+u.toString(16)).substr(-10)}switch(o){case 6:return r.substr(0,r.length-8);case 4:return r.substr(0,r.length-6);case 3:return r.substr(0,r.length-4);case 1:return r.substr(0,r.length-2);default:return r}},Convert.hexToArray=function(t){return t.match(/[\dA-Fa-f]{2}/g).map((function(t){return parseInt(t,16)}))},Convert.arrayToHex=function(t){var r="";if(t instanceof ArrayBuffer)return Convert.arrayToHex(new Uint8Array(t));for(var e=0;e<t.length;e++)r+=("0"+t[e].toString(16)).substr(-2);return r},Convert.int32toHex=function(t){return("00000000"+Math.floor(Math.abs(t)).toString(16)).substr(-8)};var TOTP={getOtpCounter:function(t,r){return t/r|0},getCurrentCounter:function(t=30){return TOTP.getOtpCounter(Date.now()/1e3|0,t)},getCountdown:function(t=30){return t-(Date.now()/1e3|0)%t},otp:async function(t,r=6,e=!1,n=!1,o=!1){var a=function(t){return t==t|0};if("string"!=typeof t)throw new Error("Invalid hex key");if(!1===e)e=TOTP.getCurrentCounter();else if("number"!=typeof e||!a(e))throw new Error("Invalid counter value");if("number"!=typeof r||r<6||r>10||!a(r))throw new Error("Invalid size value (default is 6)");if(!1!==n){if("number"!=typeof n||!a(n))throw new Error("Invalid interval value");e+=TOTP.getCurrentCounter(n)}let u=await TOTP.hmac(t,"00000000"+Convert.int32toHex(e),o),i=parseInt(u.substr(-1),16),s=2147483647&parseInt(u.substr(2*i,8),16);return s=("0000000000"+s%Math.pow(10,r)).substr(-r),o&&console.debug("Token",s),s},hmac:async function(t,r,e){var n={name:"HMAC",hash:"SHA-1"},o=Uint8Array.from(Convert.hexToArray(t)),a=Uint8Array.from(Convert.hexToArray(r));let u=await crypto.subtle.importKey("raw",o,n,!1,["sign","verify"]);return e&&console.debug("Key imported",t),u=await crypto.subtle.sign(n,u,a),u=Convert.arrayToHex(u),e&&console.debug("HMAC calculated",a,u),u},isCompatible:function(){var t=function(r){return typeof r==typeof t};return typeof crypto==typeof TOTP&&typeof Uint8Array==typeof t&&!!(crypto.subtle&&t(crypto.subtle.importKey)&&t(crypto.subtle.sign)&&t(crypto.subtle.digest))}};if(typeof Convert!=typeof TOTP)throw TOTP=null,alert("Data conversion module not loaded"),new Error("Data conversion module not loaded");